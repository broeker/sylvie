{% extends "base.njk" %}
{% block content %}
<div class="bg-gray-200 pt-32 pb-32">
  <h1 class="text-3xl font-montserrat text-center uppercase font-bold mb-4">{{ title }}</h1>
  <div class="text-center text-sm max-w-2xl text-gray-500 font-montserrat mb-32 mx-auto">
    {{ description }}
  </div>
  <div class="max-w-5xl mr-auto ml-auto">
   {{ content | safe }}
  </div>
  </div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const containers = Array.from(document.querySelectorAll('.relative'))
    .filter(c => c.querySelector('img') && c.querySelector('.absolute'));
  const images = containers.map(c => c.querySelector('img'));

  containers.forEach((container, index) => {
    const overlay = container.querySelector('.absolute');

    overlay.addEventListener('click', () => {
      let currentIndex = index;

      const popup = document.createElement('div');
      popup.classList.add('fixed', 'top-0', 'left-0', 'w-full', 'h-full', 'bg-black', 'bg-opacity-90', 'z-50', 'flex', 'items-center', 'justify-center');

      const popupImage = document.createElement('img');
      popupImage.src = images[currentIndex].src;
      popupImage.alt = images[currentIndex].alt;
      popupImage.classList.add('max-w-full', 'max-h-full');

      popupImage.addEventListener('click', () => {
        document.body.removeChild(popup);
      });

      const closeButton = document.createElement('button');
      closeButton.innerText = 'x';
      closeButton.classList.add(
        'absolute', 'top-4', 'right-4',
        'bg-gray-200', 'bg-opacity-10', 'hover:bg-opacity-100', 'transition-colors',
        'text-black', 'w-10', 'h-10', 'flex', 'items-center', 'justify-center', 'rounded-full',
        'cursor-pointer', 'z-50'
      );
      closeButton.addEventListener('click', () => {
        document.body.removeChild(popup);
      });

      const counter = document.createElement('div');
      counter.classList.add('absolute', 'bottom-4', 'text-white', 'z-50', 'text-lg');
      const updateCounter = () => {
        counter.innerText = `${currentIndex + 1} / ${images.length}`;
      };
      updateCounter();

      const prevButton = document.createElement('button');
      prevButton.innerText = '‹';
      prevButton.classList.add(
        'absolute', 'left-4', 'top-1/2', 'transform', '-translate-y-1/2',
        'bg-gray-100', 'opacity-60', 'hover:opacity-90', 'transition-colors',
        'text-black', 'w-10', 'h-10', 'flex', 'items-center', 'justify-center', 'rounded-full',
        'cursor-pointer', 'z-50'
      );
      prevButton.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        popupImage.src = images[currentIndex].src;
        popupImage.alt = images[currentIndex].alt;
        updateCounter();
      });

      const nextButton = document.createElement('button');
      nextButton.innerText = '›';
      nextButton.classList.add(
        'absolute', 'right-4', 'top-1/2', 'transform', '-translate-y-1/2',
         'bg-gray-100', 'opacity-60', 'hover:opacity-90', 'transition-colors',
        'text-black', 'w-10', 'h-10', 'flex', 'items-center', 'justify-center', 'rounded-full',
        'cursor-pointer', 'z-50'
      );
      nextButton.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % images.length;
        popupImage.src = images[currentIndex].src;
        popupImage.alt = images[currentIndex].alt;
        updateCounter();
      });

      popup.append(popupImage, closeButton, prevButton, nextButton, counter);
      document.body.appendChild(popup);
    });
  });
});
</script>

{% endblock %}